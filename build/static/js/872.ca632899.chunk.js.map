{"version":3,"file":"static/js/872.ca632899.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","Components/SPForm.tsx","Pages/Contact.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import * as React from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\n\ntype FieldType = \"text\" | \"number\" | \"select\" | \"checkbox\" | \"radio\";\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Field {\n  name: string;\n  label: string;\n  type: string;\n  textareaRows?: number;\n  options?: Option[]; // For select and radio types\n}\n\ninterface ISPFormProps {\n  fields: Field[];\n  onSubmit: (data: { [key: string]: any }) => void;\n  isButtonDisabled: any;\n  onChange: (data: { [key: string]: any }) => void;\n}\n\nconst SPForm: React.FunctionComponent<ISPFormProps> = ({\n  fields,\n  onSubmit,\n  isButtonDisabled,\n  onChange,\n}) => {\n  const [formData, setFormData] = React.useState<{ [key: string]: any }>({});\n\n  React.useEffect(() => {\n    onChange(formData);\n  }, [formData]);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value, type } = e.target;\n    if (type === \"checkbox\") {\n      setFormData((prev) => ({\n        ...prev,\n        [name]: (e.target as HTMLInputElement).checked,\n      }));\n    } else {\n      setFormData((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n    //onChange(formData);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {fields.map((field) => (\n        <Form.Group\n          as={Row}\n          controlId={field.name}\n          key={field.name}\n          className=\"mt-2 justify-content-center\"\n        >\n          <Form.Label column sm=\"2\">\n            {field.label}\n          </Form.Label>\n          <Col sm=\"6\">\n            {field.type === \"text\" && (\n              <Form.Control\n                type=\"text\"\n                name={field.name}\n                value={formData[field.name] || \"\"}\n                placeholder={\"Enter your \" + field.name}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n              />\n            )}\n            {field.type === \"number\" && (\n              <Form.Control\n                type=\"number\"\n                name={field.name}\n                value={formData[field.name] || \"\"}\n                placeholder={\"Enter your \" + field.name}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n              />\n            )}\n            {field.type === \"textarea\" && (\n              <Form.Control\n                //type=\"textarea\"\n                name={field.name}\n                value={formData[field.name] || \"\"}\n                placeholder={\"Enter your \" + field.name}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n                as=\"textarea\"\n                rows={field.textareaRows}\n              />\n            )}\n            {field.type === \"select\" && (\n              <Form.Control\n                as=\"select\"\n                name={field.name}\n                value={formData[field.name] || \"\"}\n                placeholder={\"Enter your \" + field.name}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n              >\n                {field.options?.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </Form.Control>\n            )}\n            {field.type === \"checkbox\" && (\n              <Form.Check\n                type=\"checkbox\"\n                name={field.name}\n                checked={formData[field.name] || false}\n                placeholder={\"Enter your \" + field.name}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n                label={field.label}\n              />\n            )}\n            {/* {field.type === \"radio\" &&\n            field.options?.map((option) => (\n              <Form.Check\n                type=\"radio\"\n                name={field.name}\n                value={option.value}\n                checked={formData[field.name] === option.value}\n                onChange={handleChange}\n                label={option.label}\n                key={option.value}\n              />\n            ))} */}\n          </Col>\n        </Form.Group>\n      ))}\n      <div className=\"d-flex justify-content-center\">\n        <Button className=\"mt-3\" type=\"submit\" disabled={isButtonDisabled}>\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default SPForm;\n","import { useEffect, useState } from \"react\";\nimport SPForm from \"../Components/SPForm\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\n\ninterface IContactProps {}\n\nconst Contact: React.FunctionComponent<IContactProps> = (props) => {\n  const [isContactUsFormSubmited, setIsContactUsFormSubmited] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    contact: \"\",\n  });\n\n  useEffect(() => {\n    document.title = \"Shashwat | Contact Us\";\n  }, []);\n\n  useEffect(() => {\n    const { name, email, contact, message } = formData;\n    if (name && email && contact && message) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [formData]);\n\n  const fields = [\n    { name: \"name\", label: \"Name\", type: \"text\" },\n    { name: \"email\", label: \"Email\", type: \"text\" },\n    { name: \"contact\", label: \"Contact Number\", type: \"text\" },\n    // { name: \"age\", label: \"Age\", type: \"number\" },\n    { name: \"message\", label: \"Message\", type: \"textarea\", textareaRows: 5 },\n    // {\n    //   name: \"gender\",\n    //   label: \"Gender\",\n    //   type: \"select\",\n    //   options: [\n    //     { label: \"Male\", value: \"male\" },\n    //     { label: \"Female\", value: \"female\" },\n    //     { label: \"Other\", value: \"other\" },\n    //   ],\n    // },\n\n    // { name: 'subscribe', label: 'Subscribe', type: 'checkbox' },\n    // {\n    //   name: 'contact',\n    //   label: 'Contact',\n    //   type: 'radio',\n    //   options: [\n    //     { label: 'Email', value: 'email' },\n    //     { label: 'Phone', value: 'phone' },\n    //   ],\n    // },\n  ];\n\n  const handleSubmit = (data: { [key: string]: any }) => {\n    setIsContactUsFormSubmited(false);\n\n    // const { name, email, contact, message } = data;\n\n    // setFormData({\n    //   name: name,\n    //   email: email,\n    //   contact: contact,\n    //   message: message,\n    // });\n\n    // const reqBody = {\n    //   Name: data.name,\n    //   ContactNum: data.contact,\n    //   Email: data.email,\n    //   Message: data.message,\n    // };\n    // const response = await fetch(\n    //   \"http://localhost:5108/controller/submit-form\",\n    //   {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     body: JSON.stringify(reqBody),\n    //   }\n    // );\n    // if (response.ok) {\n    //   setFormData({\n    //     name: \"\",\n    //     email: \"\",\n    //     message: \"\",\n    //     contact: \"\",\n    //   });\n    //   console.log(\"Blog post created\");\n    // }\n\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      contact: \"\",\n    });\n\n    // Simulate form submission success\n    toast.success(\n      \"Submission complete! We appreciate you reaching out. Expect a response from us shortly.\",\n      {\n        position: \"top-right\",\n        autoClose: 3000,\n      }\n    );\n\n    setIsContactUsFormSubmited(true);\n  };\n\n  const handleChange = (data: { [key: string]: any }) => {\n    const { name, email, contact, message } = data;\n\n    setFormData({\n      name: name,\n      email: email,\n      contact: contact,\n      message: message,\n    });\n  };\n\n  return (\n    <>\n      <Container className=\"contact-us-page\">\n        <Row className=\"my-5\">\n          <Col md={12}>\n            <h1 className=\"text-center\">Contact Us</h1>\n            <p className=\"lead text-center\">\n              We would love to hear from you! Please fill out the form below to\n              get in touch.\n            </p>\n          </Col>\n        </Row>\n        <SPForm\n          fields={fields}\n          onSubmit={handleSubmit}\n          isButtonDisabled={isButtonDisabled}\n          onChange={handleChange}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default Contact;\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","Component","className","props","_jsx","classNames","concat","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Control","Floating","Check","Text","Range","Select","fields","onSubmit","isButtonDisabled","onChange","formData","setFormData","handleChange","e","name","target","prev","checked","preventDefault","map","field","_field$options","Row","sm","placeholder","rows","textareaRows","options","option","Button","isContactUsFormSubmited","setIsContactUsFormSubmited","useState","setIsButtonDisabled","email","message","contact","useEffect","document","Container","md","SPForm","data","toast","success","position","autoClose","func","index","child","forEach","toArray","some","warning","module","exports"],"sourceRoot":""}