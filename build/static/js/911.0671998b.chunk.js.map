{"version":3,"file":"static/js/911.0671998b.chunk.js","mappings":"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","sources":["Components/Projects.tsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import * as React from \"react\";\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport hero_section_bg from \"../Assets/hero_section_bg.jpg\";\nimport project_management from \"../Assets/project_management.png\";\n\ninterface IProjectsProps {}\n\nconst Projects: React.FunctionComponent<IProjectsProps> = (props) => {\n  const images: Record<string, string> = {\n    project_management: project_management,\n  };\n\n  const projects = [\n    {\n      title: \"VenuePay\",\n      description:\n        \"An Admin portal for an e-commerce website, offering comprehensive visibility into all transactions, detailed product information, inventory management including the addition of new products, and real-time notifications of out-of-stock items.\",\n      image: \"project1.jpg\",\n      link: \"/portfolio/project-one\",\n    },\n    {\n      title: \"Agenty\",\n      description:\n        \"Agenty is an ETL tool that enables the extraction of data from websites or web applications, transforms it to meet specific business requirements, and loads it into various destinations seamlessly.\",\n      image: \"project2.jpg\",\n      link: \"/portfolio/project-two\",\n    },\n    {\n      title: \"SoftShed\",\n      description:\n        \"An advanced ERP application designed to streamline the management of expenses, income, projects, tasks, HRMS, and more. This versatile tool enhances operational efficiency and provides comprehensive oversight for various business functions.\",\n      image: \"project3.jpg\",\n      link: \"/portfolio/project-three\",\n    },\n    {\n      title: \"Amazon Device Repair\",\n      description:\n        \"ADR (Amazon Device Repair) is a Chatbot Solution and Agent Desktop designed to support Customer Care Representatives (CSRs). This project streamlines customer interactions, enhancing efficiency and user experience by providing automated assistance and a robust interface for agents.\",\n      image: \"project1.jpg\",\n      link: \"/portfolio/project-one\",\n    },\n    {\n      title: \"Zeta\",\n      description:\n        \"Zeta is a contact center application featuring an IVR self-service system and a customized Agent Desktop designed for Customer Care Representatives to enhance communication and customer support.\",\n      image: \"project2.jpg\",\n      link: \"/portfolio/project-two\",\n    },\n    {\n      title: \"RevolOne\",\n      description:\n        \"RevolOne is a comprehensive contact center application that includes an IVR system, and an advanced chatbot solution to support thier Insuarance Agents and enhance overall communication and customer service.\",\n      image: \"project3.jpg\",\n      link: \"/portfolio/project-three\",\n    },\n  ];\n\n  return (\n    <>\n      <Container className=\"portfolio-highlights\">\n        <h2 className=\"text-center\">Portfolio Highlights</h2>\n        <Row>\n          {projects.map((project, index) => (\n            <Col md={4} key={index} className=\"mb-4\">\n              <Card className=\"text-center h-100 tilt-card\">\n                {/* <Card.Img\n                  variant=\"top\"\n                  src={project_management}\n                  className=\"mx-auto mt-3\"\n                  style={{ width: \"50px\", height: \"50px\" }}\n                /> */}\n                <Card.Body>\n                  <Card.Title>{project.title}</Card.Title>\n                  <Card.Text>{project.description}</Card.Text>\n\n                  {/* <Button\n                    disabled\n                    variant=\"outline-primary\"\n                    href={project.link}\n                  >\n                    View Details\n                  </Button>\n                   */}\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Projects;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["props","_jsx","_Fragment","children","_jsxs","Container","className","Row","title","description","image","link","map","project","index","Col","md","Card","Body","Title","Text","CardBody","React","_ref","ref","bsPrefix","as","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","variant","concat","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","Object","assign","Img","Subtitle","Link","Header","Footer","ImgOverlay"],"sourceRoot":""}